@page "/"

@using FarmsToFeedUs.Shared 
@using AspNetMonsters.Blazor.Geolocation

@inject HttpClient Http
@inject LocationService  LocationService

<h1>Farms</h1>

<h3>Filter to near me</h3>

<button class="btn btn-primary" type="submit">Button</button>
<button class="btn btn-primary" type="submit" @onclick="GetLocationAsync"><span class="oi oi-location" data-glyph="location"></span></button>

<div>
Lat: @location?.Latitude <br/>
Long: @location?.Longitude <br />
Accuracy: @location?.Accuracy <br />
</div>

@if (farms == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @foreach (var farm in farms)
    {
        <div class="farm-container">
                        
            <div class="farm-cell">

                <h3>@farm.Name</h3>

                <div>
                    @farm.Town<br/>
                    @farm.County<br/>
                    @farm.Postcode
                </div>
                
                @if (!string.IsNullOrWhiteSpace(farm.InstagramUrl))
                {
                    <a href="@farm.InstagramUrl" target="_blank">
                        <img src="img/instagram.png" class="instagram-icon" />
                    </a>
                }
                
                @if (!string.IsNullOrWhiteSpace(farm.FacebookUrl))
                {
                    <a href="@farm.FacebookUrl" target="_blank">
                        <img src="img/facebook.png" class="facebook-icon" />
                    </a>
                }

            </div>
            
            <div class="farm-cell">

                @if (!string.IsNullOrWhiteSpace(farm.WebsiteUrl))
                {
                    <a href="@farm.WebsiteUrl" class="btn btn-primary" role="button" target="_blank">Visit Website</a>
                }

            </div>

        </div>
    }
 }

@code 
{
    private Location location;
    private List<FarmModel> farms;

    protected override async Task OnInitializedAsync()
    {
        farms = await Http.GetFromJsonAsync<List<FarmModel>>("farms");
    }

    private async Task GetLocationAsync()
    {
        location = await LocationService.GetLocationAsync();
    }
}
