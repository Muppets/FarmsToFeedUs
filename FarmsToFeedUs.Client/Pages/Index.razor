@page "/"

@using FarmsToFeedUs.Shared 
@using AspNetMonsters.Blazor.Geolocation

@inject HttpClient Http
@inject LocationService  LocationService

<h1>Farms</h1>

<h3>Filter to near me</h3>

<div class="filter-location input-group">
  <div class="input-group-prepend">
    <button class="btn btn-primary" type="submit" @onclick="GetLocationAsync"><span class="oi oi-location" data-glyph="location"></span></button>
  </div>
  <input type="search" class="form-control" placeholder="Enter town or postcode" />
  <div class="input-group-append">
      <button class="btn btn-primary" type="submit">Search</button>
  </div>
</div>

@if (farms == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="farm-container">

        <div class="card-deck text-center">

        @foreach (var farm in farms.Take(10))
        {             
            <div class="card box-shadow">

                <div class="card-header">
                    <h4>@farm.Name</h4>
                </div>

                <div class="card-body">
                    
                    <div class="social-icons">

                        @if (!string.IsNullOrWhiteSpace(farm.InstagramUrl))
                        {
                            <a href="@farm.InstagramUrl" target="_blank">
                                <img src="img/instagram.png" class="instagram-icon" />
                            </a>
                        }
                
                        @if (!string.IsNullOrWhiteSpace(farm.FacebookUrl))
                        {
                            <a href="@farm.FacebookUrl" target="_blank">
                                <img src="img/facebook.png" class="facebook-icon" />
                            </a>
                        }

                    </div>
                    
                    <ul class="list-unstyled">
                      <li>@farm.Town</li>
                      <li>@farm.County</li>
                      <li>@farm.Postcode</li>
                    </ul>
                    
                    <div>

                        @if (!string.IsNullOrWhiteSpace(farm.WebsiteUrl))
                        {
                            <a href="@farm.WebsiteUrl" class="btn btn-outline-primary" role="button" target="_blank">Visit Website</a>
                        }

                    </div>
                    
                </div>
                   
            </div>
        }

        </div>
    </div>
 }

@code 
{
    private List<FarmModel> farms;

    protected override async Task OnInitializedAsync()
    {
        //farms = await Http.GetFromJsonAsync<List<FarmModel>>("farms");
    }

    private async Task GetLocationAsync()
    {
        var location = await LocationService.GetLocationAsync();

        if (location != null)
        {
            var uri = $"farms?lat={location.Latitude}&long={location.Longitude}";
            farms = await Http.GetFromJsonAsync<List<FarmModel>>(uri);
        }
    }
}
